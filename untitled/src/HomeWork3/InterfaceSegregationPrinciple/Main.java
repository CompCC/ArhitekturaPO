/*
I -  Interface Segregation Principle - принцип разделения интерфейсов. Данный принцип обозначает,
что не нужно заставлять клиента (класс) реализовывать интерфейс, который не имеет к нему отношения.

Допустим у нас имеется интерфейс Payments и в нем есть три метода: оплата WebMoney, оплата банковской карточкой и оплата по номеру телефона.

Далее нам надо реализовать два класса-сервиса, которые будут у себя реализовывать различные виды проведения оплат
(класс InternetPaymentService и TerminalPaymentService). При этом TerminalPaymentService не будет поддерживать
проведение оплат по номеру телефона. Но если мы оба класса имплементим от интерфейса Payments, то мы будем "заставлять"
TerminalPaymentService реализовывать метод, который ему не нужен.

Таким образом произойдет нарушение принципа разделения интерфейсов.

Для того чтобы этого не происходило необходимо разделить наш исходный интерфейс Payments на несколько и,
создавая классы, имплементить в них только те интерфейсы с методами, которые им нужны.

 */

package HomeWork3.InterfaceSegregationPrinciple;

public class Main {
}
